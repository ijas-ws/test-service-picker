import { Construct } from "constructs";
import { FunctionOptions, Function as CdkFunction } from "aws-cdk-lib/aws-lambda";
import { SSTConstruct } from "./Construct.js";
import { Permissions } from "./util/permission.js";
import { Size } from "./util/size.js";
import { Duration } from "./util/duration.js";
export interface SsrFunctionProps extends Omit<FunctionOptions, "memorySize" | "timeout" | "runtime"> {
    bundle: string;
    handler: string;
    runtime?: "nodejs14.x" | "nodejs16.x" | "nodejs18.x";
    timeout: number | Duration;
    memorySize: number | Size;
    permissions?: Permissions;
    environment?: Record<string, string>;
    bind?: SSTConstruct[];
}
export declare class SsrFunction extends Construct {
    function: CdkFunction;
    private props;
    constructor(scope: Construct, id: string, props: SsrFunctionProps);
    attachPermissions(permissions: Permissions): void;
    private createCodeAsset;
    private createFunction;
    private createCodeReplacer;
    private bind;
}
